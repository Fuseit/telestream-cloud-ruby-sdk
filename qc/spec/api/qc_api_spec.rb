=begin
#Qc API

#QC API

OpenAPI spec version: 1.0.0
Contact: cloudsupport@telestream.net
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.2.3

=end

require 'spec_helper'
require 'json'

# Unit tests for TelestreamCloud::Qc::QcApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'QcApi' do
  before do
    # run before each test
    @instance = TelestreamCloud::Qc::QcApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of QcApi' do
    it 'should create an instance of QcApi' do
      expect(@instance).to be_instance_of(TelestreamCloud::Qc::QcApi)
    end
  end

  # unit tests for cancel_job
  # 
  # 
  # @param project A unique identifier of a Project.
  # @param job A unique identifier of a Job.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'cancel_job test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_job
  # Create a new job
  # 
  # @param project A unique identifier of a Project.
  # @param data 
  # @param [Hash] opts the optional parameters
  # @return [Job]
  describe 'create_job test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_project
  # Create a new project
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [Data] :data 
  # @return [Project]
  describe 'create_project test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_job
  # Get QC job
  # 
  # @param project A unique identifier of a Project.
  # @param job A unique identifier of a Job.
  # @param [Hash] opts the optional parameters
  # @return [Job]
  describe 'get_job test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_project
  # Get project by Id
  # 
  # @param project A unique identifier of a Project.
  # @param [Hash] opts the optional parameters
  # @return [Project]
  describe 'get_project test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_jobs
  # Get jobs form projects
  # 
  # @param project A unique identifier of a Project.
  # @param [Hash] opts the optional parameters
  # @option opts [BOOLEAN] :expand Expand details of job
  # @option opts [String] :status Filter jobs by status
  # @option opts [Integer] :per_page Limit number of listed jobs
  # @option opts [Integer] :page Index of jobs page to be listed
  # @return [JobsCollection]
  describe 'list_jobs test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_projects
  # List all projects for an account
  # 
  # @param [Hash] opts the optional parameters
  # @return [Array<Project>]
  describe 'list_projects test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for modify_project
  # Modify project
  # 
  # @param project 
  # @param [Hash] opts the optional parameters
  # @option opts [Data1] :data 
  # @return [Project]
  describe 'modify_project test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for proxy
  # 
  # 
  # @param project A unique identifier of a Project.
  # @param job A unique identifier of a Job.
  # @param [Hash] opts the optional parameters
  # @return [Proxy]
  describe 'proxy test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for remove_job
  # 
  # 
  # @param project A unique identifier of a Project.
  # @param job A unique identifier of a Job.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'remove_job test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for remove_project
  # 
  # 
  # @param project 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'remove_project test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for signed_urls
  # 
  # 
  # @param project A unique identifier of a Project.
  # @param job A unique identifier of a Job.
  # @param [Hash] opts the optional parameters
  # @return [Hash<String, String>]
  describe 'signed_urls test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for upload_video
  # Creates an upload session
  # 
  # @param project A unique identifier of a Project.
  # @param video_upload_body 
  # @param [Hash] opts the optional parameters
  # @return [UploadSession]
  describe 'upload_video test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
